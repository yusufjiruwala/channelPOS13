/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dlgPayment.java
 *
 * Created on Apr 13, 2014, 2:24:24 PM
 */
package com.forms.panels;

import com.forms.MainFrame;
import com.generic.model.Row;
import com.generic.model.dataCell;
import com.generic.model.localTableModel;
import com.generic.model.qryColumn;
import com.generic.utils.NumberEditor;
import com.generic.utils.utils;
import com.keyboard.KeyBoardFrame;
import com.keyboard.keyboardViewer;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Yusuf
 */
public class CloseVouDlg extends javax.swing.JDialog {

    public double sumPaidAmt = 0;
    public double sumPaidAmtThis = 0;
    public double sumNetAmt = 0;
    public double sumCashAmt = 0;
    public double sumAdvanceAmt = 0;
    public keyboardViewer kv = null;
    private SimpleDateFormat dateformat = null;

    /**
     * Creates new form dlgPayment
     */
    public CloseVouDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setParentJf((MainFrame) parent);
        utils.setupFormTextBoxes(getRootPane().getContentPane());
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlSinglePay = new javax.swing.JPanel();
        sumTxtCashAmt = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        sumTxtNetAmt = new javax.swing.JLabel();
        sumTxtAdvanceAmt = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        listType = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        pnlMultiplePay = new javax.swing.JPanel();
        sumTxtPaidAmt = new javax.swing.JTextField();
        cmdPayHereAll = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        payTable = new javax.swing.JTable();
        cmdPayRestHere = new javax.swing.JButton();
        sumTxtNetAmt1 = new javax.swing.JLabel();
        pnlKb = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowClose(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Dialog", 1, 18));

        sumTxtCashAmt.setFont(new java.awt.Font("Tahoma", 1, 24));
        sumTxtCashAmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sumTxtCashAmt.setText("0");
        sumTxtCashAmt.setName("sumTxtCashAmt"); // NOI18N
        sumTxtCashAmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumTxtCashAmtActionPerformed(evt);
            }
        });
        sumTxtCashAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sumTxtCashAmtsumTxtDiscAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sumTxtCashAmtsumTxtDiscAmtFocusLost(evt);
            }
        });

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Cash Given");

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Net Amount");

        sumTxtNetAmt.setBackground(new java.awt.Color(255, 255, 102));
        sumTxtNetAmt.setFont(new java.awt.Font("Tahoma", 1, 24));
        sumTxtNetAmt.setForeground(new java.awt.Color(0, 51, 204));
        sumTxtNetAmt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sumTxtNetAmt.setText("0.0");
        sumTxtNetAmt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(-16777216,true)));
        sumTxtNetAmt.setFocusTraversalPolicyProvider(true);
        sumTxtNetAmt.setOpaque(true);

        sumTxtAdvanceAmt.setBackground(new java.awt.Color(255, 255, 204));
        sumTxtAdvanceAmt.setFont(new java.awt.Font("Tahoma", 1, 24));
        sumTxtAdvanceAmt.setForeground(new java.awt.Color(0, 51, 204));
        sumTxtAdvanceAmt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sumTxtAdvanceAmt.setText("0.0");
        sumTxtAdvanceAmt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(-16777216,true)));
        sumTxtAdvanceAmt.setFocusTraversalPolicyProvider(true);
        sumTxtAdvanceAmt.setOpaque(true);

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Advance paid");

        listType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listTypeActionPerformed(evt);
            }
        });

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Pay Type");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/forms/panels/images/forward.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSinglePayLayout = new javax.swing.GroupLayout(pnlSinglePay);
        pnlSinglePay.setLayout(pnlSinglePayLayout);
        pnlSinglePayLayout.setHorizontalGroup(
            pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSinglePayLayout.createSequentialGroup()
                .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSinglePayLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                    .addGroup(pnlSinglePayLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlSinglePayLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSinglePayLayout.createSequentialGroup()
                        .addComponent(jButton3, 0, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listType, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sumTxtCashAmt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sumTxtNetAmt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(sumTxtAdvanceAmt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSinglePayLayout.setVerticalGroup(
            pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSinglePayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sumTxtNetAmt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sumTxtAdvanceAmt)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlSinglePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sumTxtCashAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        jTabbedPane1.addTab("Single Payment", pnlSinglePay);

        sumTxtPaidAmt.setEditable(false);
        sumTxtPaidAmt.setFont(new java.awt.Font("Tahoma", 1, 18));
        sumTxtPaidAmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sumTxtPaidAmt.setText("0");
        sumTxtPaidAmt.setName("sumTxtCashAmt"); // NOI18N
        sumTxtPaidAmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumTxtPaidAmtActionPerformed(evt);
            }
        });
        sumTxtPaidAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sumTxtPaidAmtsumTxtDiscAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sumTxtPaidAmtsumTxtDiscAmtFocusLost(evt);
            }
        });

        cmdPayHereAll.setText("Pay here All Amount");
        cmdPayHereAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPayHereAllActionPerformed(evt);
            }
        });

        payTable.setFont(new java.awt.Font("Times New Roman", 1, 24));
        payTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        payTable.setRowHeight(30);
        payTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(payTable);

        cmdPayRestHere.setText("Pay rest ");
        cmdPayRestHere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPayRestHereActionPerformed(evt);
            }
        });

        sumTxtNetAmt1.setBackground(new java.awt.Color(255, 255, 102));
        sumTxtNetAmt1.setFont(new java.awt.Font("Tahoma", 1, 24));
        sumTxtNetAmt1.setForeground(new java.awt.Color(0, 51, 204));
        sumTxtNetAmt1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sumTxtNetAmt1.setText("0.0");
        sumTxtNetAmt1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(-16777216,true)));
        sumTxtNetAmt1.setFocusTraversalPolicyProvider(true);
        sumTxtNetAmt1.setOpaque(true);

        javax.swing.GroupLayout pnlMultiplePayLayout = new javax.swing.GroupLayout(pnlMultiplePay);
        pnlMultiplePay.setLayout(pnlMultiplePayLayout);
        pnlMultiplePayLayout.setHorizontalGroup(
            pnlMultiplePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMultiplePayLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlMultiplePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMultiplePayLayout.createSequentialGroup()
                        .addComponent(cmdPayRestHere, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdPayHereAll, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMultiplePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlMultiplePayLayout.createSequentialGroup()
                            .addComponent(sumTxtNetAmt1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(sumTxtPaidAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        pnlMultiplePayLayout.setVerticalGroup(
            pnlMultiplePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMultiplePayLayout.createSequentialGroup()
                .addGroup(pnlMultiplePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdPayRestHere, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPayHereAll, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMultiplePayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sumTxtPaidAmt, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(sumTxtNetAmt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Multiple Payments", pnlMultiplePay);

        javax.swing.GroupLayout pnlKbLayout = new javax.swing.GroupLayout(pnlKb);
        pnlKb.setLayout(pnlKbLayout);
        pnlKbLayout.setHorizontalGroup(
            pnlKbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );
        pnlKbLayout.setVerticalGroup(
            pnlKbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 349, Short.MAX_VALUE)
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/forms/panels/images/ok.png"))); // NOI18N
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/forms/panels/images/cancel.png"))); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlKb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlKb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void payTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payTableMouseClicked
        payTable.editCellAt(payTable.getSelectedRow(), 2);
        if (payTable.getEditorComponent() != null && payTable.getEditorComponent() instanceof JFormattedTextField) {
            ((JFormattedTextField) payTable.getEditorComponent()).requestFocus();
            if (Double.valueOf(((JFormattedTextField) payTable.getEditorComponent()).getText()) != (sumNetAmt - sumNetAmt) - sumPaidAmtThis && sumPaidAmtThis == 0) {
                ((JFormattedTextField) payTable.getEditorComponent()).setText(String.valueOf((sumNetAmt - sumAdvanceAmt) - sumPaidAmtThis));
            }
            ((JFormattedTextField) payTable.getEditorComponent()).selectAll();
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    ((JFormattedTextField) payTable.getEditorComponent()).selectAll();
                }
            });
        }
}//GEN-LAST:event_payTableMouseClicked
    public void setParentJf(MainFrame parentJf) {
        this.parentJf = parentJf;
        sumTxtCashAmt.setInputVerifier(number_iv);
        sumTxtPaidAmt.setInputVerifier(number_iv);
        sumTxtCashAmt.requestFocus();
        sumTxtNetAmt.setText(parentJf.getSp().sumTxtNetAmount.getText());
        sumTxtNetAmt1.setText(parentJf.getSp().sumTxtNetAmount.getText());
        sumNetAmt = parentJf.getSp().sumNetAmt;
        sumAdvanceAmt = parentJf.getSp().sumAdvanceAmt;
        if (kv == null) {
            kv = new keyboardViewer(pnlKb);
            kv.setShowPanels(keyboardViewer.MODE_NUMBERS);

        }

        decimalformat = new DecimalFormat(parentJf.getMapVars().get("money_number"));
        dateformat = new SimpleDateFormat(parentJf.getMapVars().get("short_date_format"));

        sumCashAmt = sumNetAmt - sumAdvanceAmt;
        sumTxtCashAmt.setText(decimalformat.format(sumCashAmt));
        sumTxtCashAmt.selectAll();
        sumTxtAdvanceAmt.setText(decimalformat.format(sumAdvanceAmt));

        payRows.clearALl();
        payRows.getQrycols().add(new qryColumn(0, "NO"));
        payRows.getQrycols().add(new qryColumn(1, "DESCR"));
        payRows.getQrycols().add(new qryColumn(2, "AMOUNT"));
        payRows.getQrycols().add(new qryColumn(3, "ACCNO"));
        payRows.getQrycols().add(new qryColumn(4, "NAME"));
        payRows.getVisbleQrycols().addAll(payRows.getQrycols());

        payRows.getColByName("NO").setCanEdit(false);
        payRows.getColByName("DESCR").setCanEdit(false);
        payRows.getColByName("ACCNO").setCanEdit(false);
        payRows.getColByName("NAME").setCanEdit(false);

        payRows.getColByName("AMOUNT").setAlignmnet(JLabel.TRAILING);
        payRows.getColByName("AMOUNT").setNumberFormat(decimalformat.toPattern());
        payRows.getColByName("AMOUNT").setDatatype(19);
        payRows.getColByName("AMOUNT").setColor(Color.YELLOW);

        payRows.getColByName("ACCNO").setVisible(false);
        payRows.getColByName("NAME").setVisible(false);
        payRows.getVisbleQrycols().remove(payRows.getColByName("ACCNO"));
        payRows.getVisbleQrycols().remove(payRows.getColByName("NAME"));

        payTable.setModel(payRows);
        payTable.getColumnModel().getColumn(0).setCellRenderer(new ColorRenderer(true));
        payTable.getColumnModel().getColumn(1).setCellRenderer(new ColorRenderer(true));
        payTable.getColumnModel().getColumn(2).setCellRenderer(new ColorRenderer(true));
        ((ColorRenderer) payTable.getColumnModel().getColumn(2).getCellRenderer()).setFont(payTable.getFont());
        payTable.getColumnModel().getColumn(2).setCellEditor(new NumberEditor(decimalformat));
        payTable.getColumnModel().getColumn(2).getCellEditor().addCellEditorListener(new CellEditorListener() {

            public void editingStopped(ChangeEvent e) {
                sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
                sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
                sumTxtPaidAmt.setText(decimalformat.format(sumPaidAmt));
                update_sums();
            }

            public void editingCanceled(ChangeEvent e) {
                sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
                sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
                sumTxtPaidAmt.setText(decimalformat.format(sumPaidAmtThis));
                update_sums();
            }
        });
        payTable.getModel().addTableModelListener(new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
            }
        });

        try {
            String sqwhere = "";
            if (parentJf.getSp().cmdTables.isSelected() || parentJf.getSp().cmdTakeAway.isSelected()) {
                sqwhere = " and invoicetype.accno is not null";
            }
            PreparedStatement ps = parentJf.getSp().dbConnection.prepareStatement("select INVOICETYPE.*,C_YCUST.NAME ACNAME "
                    + " from invoicetype,C_YCUST where C_YCUST.CODE(+)=INVOICETYPE.ACCNO AND location_code=? " + sqwhere + " order by no", ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ps.setString(1, parentJf.getSp().dataLocationCode);
            ResultSet rsx = ps.executeQuery();
            rsx.beforeFirst();
            ((DefaultComboBoxModel) listType.getModel()).removeAllElements();
            while (rsx.next()) {
                ((DefaultComboBoxModel) listType.getModel()).addElement(new dataCell(rsx.getString("DESCR"), Double.valueOf(rsx.getDouble("NO"))));
                Row rw = new Row(5);
                rw.lst.get(0).setValue(rsx.getString("NO"), Double.valueOf(rsx.getDouble("NO")));
                rw.lst.get(1).setValue(rsx.getString("DESCR"), rsx.getString("DESCR"));
                rw.lst.get(2).setValue(Double.valueOf(0), Double.valueOf(0));
                rw.lst.get(3).setValue(rsx.getString("ACCNO"), rsx.getString("ACCNO"));
                rw.lst.get(4).setValue(rsx.getString("ACNAME"), rsx.getString("ACNAME"));
                payRows.getRows().add(rw);
            }
            ps.close();
            if (listType.getModel().getSize() <= 0) {
                throw new SQLException("No cash type found !");
            }
            listType.setSelectedIndex(0);
            varCashType = Double.valueOf(((dataCell) listType.getSelectedItem()).getValue().toString());
            if (parentJf.getMapVars().get("CASH_TYPE") != null) {
                varCashType = Integer.valueOf(parentJf.getMapVars().get("CASH_TYPE").toString());
            }

            sumTxtCashAmt.setEditable(false);
            if ((Double.valueOf(((dataCell) listType.getSelectedItem()).getValue().toString())) == varCashType) {
                sumTxtCashAmt.setEditable(true);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());

        }
    }

    private void cmdPayHereAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPayHereAllActionPerformed
        payTable.removeEditor();
        for (int i = 0; i < payRows.getRows().size(); i++) {
            Row row = payRows.getRows().get(i);
            row.lst.get(2).setValue(Double.valueOf("0"), Double.valueOf("0"));
        }
        if (payTable.getSelectedRow() >= 0) {
            payRows.setFieldValue(payTable.getSelectedRow(), "AMOUNT", Double.valueOf(sumNetAmt - sumAdvanceAmt));
        }

        sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
        sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
        sumTxtPaidAmt.setText(decimalformat.format(sumPaidAmtThis));
        update_sums();
        payTable.updateUI();
}//GEN-LAST:event_cmdPayHereAllActionPerformed
    private InputVerifier number_iv = new InputVerifier() {

        @Override
        public boolean verify(JComponent input) {
            JTextField txt = (JTextField) input;
            if (txt.getText().length() == 0) {
                return true;
            }

            boolean ret = false;
            try {
                //decimalformat.parse(txt.getText());
                if (txt.getName().equals("sumTxtPaidAmt")) {
                    sumPaidAmt = (decimalformat.parse(txt.getText())).doubleValue();
                    //txt.setText(decimalformat.format(sumPaidAmt));
                }
                if (txt.getName().equals("sumTxtCashAmt")) {
                    sumCashAmt = ((Number) decimalformat.parse(txt.getText())).doubleValue();
                }

                update_sums();
                ret = true;
            } catch (ParseException ex) {
                Logger.getLogger(salesPanel.class.getName()).log(Level.SEVERE, null, ex);
                ret = false;
            }

            return ret;
        }
    };

    public void update_sums() {
        sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
        sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
        sumTxtPaidAmt.setText(decimalformat.format(sumPaidAmtThis));
    }

    private void cmdPayRestHereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPayRestHereActionPerformed

        payTable.removeEditor();

        if (payTable.getSelectedRow() >= 0) {
            payRows.setFieldValue(payTable.getSelectedRow(), "AMOUNT", Double.valueOf(0));
            sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
            sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
            payRows.setFieldValue(payTable.getSelectedRow(), "AMOUNT", Double.valueOf((sumNetAmt - sumAdvanceAmt) - sumPaidAmtThis));
        }
        sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
        sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
        sumTxtPaidAmt.setText(decimalformat.format(sumPaidAmtThis));
        if (sumPaidAmt > sumNetAmt) {
            payRows.setFieldValue(payTable.getSelectedRow(), "AMOUNT", Double.valueOf(0));
            sumPaidAmtThis = payRows.getSummaryOf("AMOUNT", localTableModel.SUMMARY_SUM);
            sumPaidAmt = sumPaidAmtThis + sumAdvanceAmt;
        }
        payTable.updateUI();
}//GEN-LAST:event_cmdPayRestHereActionPerformed

    private void sumTxtPaidAmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumTxtPaidAmtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sumTxtPaidAmtActionPerformed

    private void sumTxtPaidAmtsumTxtDiscAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sumTxtPaidAmtsumTxtDiscAmtFocusGained
    }//GEN-LAST:event_sumTxtPaidAmtsumTxtDiscAmtFocusGained

    private void sumTxtPaidAmtsumTxtDiscAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sumTxtPaidAmtsumTxtDiscAmtFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_sumTxtPaidAmtsumTxtDiscAmtFocusLost

    private void windowClose(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClose
    }//GEN-LAST:event_windowClose

    private void sumTxtCashAmtsumTxtDiscAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sumTxtCashAmtsumTxtDiscAmtFocusLost
        try {
            sumCashAmt = decimalformat.parse(sumTxtCashAmt.getText()).doubleValue();
            sumTxtCashAmt.setText(decimalformat.format(sumCashAmt));
        } catch (ParseException ex) {
            Logger.getLogger(CloseVouDlg.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }


}//GEN-LAST:event_sumTxtCashAmtsumTxtDiscAmtFocusLost

    private void sumTxtCashAmtsumTxtDiscAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sumTxtCashAmtsumTxtDiscAmtFocusGained
        //onfocusLostSums((JTextField) evt.getComponent());
}//GEN-LAST:event_sumTxtCashAmtsumTxtDiscAmtFocusGained

    private void sumTxtCashAmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumTxtCashAmtActionPerformed
        try {
            sumCashAmt = decimalformat.parse(sumTxtCashAmt.getText()).doubleValue();
            sumTxtCashAmt.setText(decimalformat.format(sumCashAmt));
        } catch (ParseException ex) {
            Logger.getLogger(CloseVouDlg.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
}//GEN-LAST:event_sumTxtCashAmtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (jTabbedPane1.getSelectedComponent() == pnlSinglePay) {
                sumCashAmt = decimalformat.parse(sumTxtCashAmt.getText()).doubleValue();
                if (sumCashAmt < 0) {
                    JOptionPane.showMessageDialog(this, "Minus pay not allow here !");
                    return;

                }
                if (utils.roundToDecimals(sumCashAmt, 3) < utils.roundToDecimals(sumNetAmt - sumAdvanceAmt, 3)) {
                    JOptionPane.showMessageDialog(this, "Must be greatere than " + (sumNetAmt - sumAdvanceAmt));
                    return;
                }
                sumTxtCashAmt.setText(decimalformat.format(sumCashAmt));
                parentJf.getSp().sumTxtCashAmt.setText(sumTxtCashAmt.getText());
                parentJf.getSp().sumCashAmt = decimalformat.parse(sumTxtCashAmt.getText()).doubleValue();
                double selectedPay = Double.valueOf(((dataCell) listType.getSelectedItem()).getValue().toString());
                setPaymentType(selectedPay);
                update_payments(0);
                parentJf.getSp().close_voucher();
                double selpay = (Double.valueOf(((dataCell) listType.getSelectedItem()).getValue().toString()));
                if (sumCashAmt > 0 && varCashType == selpay) {
                    ShowMessageFrame sf = new ShowMessageFrame("Change amount : " + decimalformat.format(sumCashAmt - (sumNetAmt - sumAdvanceAmt)), 20, 10000);
                }
            }
            if (jTabbedPane1.getSelectedComponent() == pnlMultiplePay) {
                payTable.removeEditor();
//                parentJf.getSp().payRows.getRows().clear();
//                parentJf.getSp().payRows.getRows().addAll(payRows.getRows());
                update_sums();
                parentJf.getSp().sumPaidAmt = sumPaidAmt;
                parentJf.getSp().sumPaidAmtThis = sumPaidAmtThis;
                if (utils.roundToDecimals(sumPaidAmt, 3) != utils.roundToDecimals(sumNetAmt, 3)) {
                    JOptionPane.showMessageDialog(this, "Must be equal to # " + utils.roundToDecimals(sumNetAmt-sumAdvanceAmt, 3));
                    return;
                }
                update_payments(-1);
                parentJf.getSp().close_voucher();
            }
            setVisible(false);

        } catch (Exception ex) {
            Logger.getLogger(CloseVouDlg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void update_payments(double allval) {
        for (int i = 0; i < payRows.getRowCount(); i++) {
            double no = Double.valueOf(payRows.getFieldValue(i, "NO").toString());
            double amt = Double.valueOf(payRows.getFieldValue(i, "AMOUNT").toString());
            if (amt > 0 && allval == -1) {
                setPaymentType(no);
                parentJf.getSp().sumCashAmt = amt;
            }
            int fnd = parentJf.getSp().payRows.locate("NO", Double.valueOf(no));
            if (fnd > -1) {
                parentJf.getSp().payRows.setFieldValue(fnd, "AMOUNT", Double.valueOf(allval == -1 ? amt : allval));
            }
        }

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void listTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listTypeActionPerformed
        sumCashAmt = sumNetAmt - sumAdvanceAmt;
        sumTxtCashAmt.setText(decimalformat.format(sumNetAmt - sumAdvanceAmt));
        sumTxtCashAmt.setEditable(false);
        if (listType.getSelectedItem() != null && (Double.valueOf(((dataCell) listType.getSelectedItem()).getValue().toString())) == varCashType) {
            sumTxtCashAmt.setEditable(true);
        }
    }//GEN-LAST:event_listTypeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (listType.getSelectedIndex() == listType.getItemCount() - 1) {
            listType.setSelectedIndex(0);
        } else {
            listType.setSelectedIndex(listType.getSelectedIndex() + 1);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdPayHereAll;
    private javax.swing.JButton cmdPayRestHere;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox listType;
    private javax.swing.JTable payTable;
    private javax.swing.JPanel pnlKb;
    private javax.swing.JPanel pnlMultiplePay;
    private javax.swing.JPanel pnlSinglePay;
    private javax.swing.JLabel sumTxtAdvanceAmt;
    private javax.swing.JTextField sumTxtCashAmt;
    private javax.swing.JLabel sumTxtNetAmt;
    private javax.swing.JLabel sumTxtNetAmt1;
    private javax.swing.JTextField sumTxtPaidAmt;
    // End of variables declaration//GEN-END:variables
    private localTableModel payRows = new localTableModel(5);
    private MainFrame parentJf = null;
    private DecimalFormat decimalformat = null;
    private double varCashType = -1;

    private void setPaymentType(double selectedPay) {
        for (int i = 0; i < parentJf.getSp().jComboBox1.getModel().getSize(); i++) {
            if (parentJf.getSp().jComboBox1.getModel().getElementAt(i) instanceof dataCell
                    && (Double.valueOf(((dataCell) parentJf.getSp().jComboBox1.getModel().getElementAt(i)).getValue().toString()) == selectedPay)) {
                parentJf.getSp().jComboBox1.setSelectedIndex(i);
                return;
            }
        }

    }
}
