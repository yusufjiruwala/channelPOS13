/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmSearchPanel.java
 *
 * Created on Jul 18, 2014, 2:29:42 PM
 */
package com.forms;

import com.forms.MainFrame;
import com.generic.model.DBClass;
import com.generic.utils.utils;
import com.lov.lovFrame;
import com.lov.selectListView;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;

/**
 *
 * @author Yusuf
 */
public class frmLovSearchPanel extends javax.swing.JPanel {

    /** Creates new form frmSearchPanel */
    private selectListView slov = new selectListView();
    private DBClass dbc = null;
    private String sqlstr = "";
    private int selectedno = -1;
    private boolean can_select_multiple = false;
    private int NoOfClicksOnSelection = 0;
    private MainFrame parentJf = null;
    public lovFrame lovSelection = null;
    private boolean auto_size_cols = false;
    private String[] visible_cols = null;
    public String childCountField = "";
    public String levelNoField = "";
    public Color levelno1_color = Color.white;
    public JPanel footerPanel = null;

    public boolean isCan_select_multiple() {
        return can_select_multiple;
    }

    public void setCan_select_multiple(boolean can_select_multiple) {
        this.can_select_multiple = can_select_multiple;
    }

    public lovFrame getLovSelection() {
        return lovSelection;
    }

    public void setLovSelection(lovFrame lovSelection) {
        this.lovSelection = lovSelection;
    }

    public int getSelectedno() {
        return selectedno;
    }

    public void setSelectedno(int selectedno) {
        this.selectedno = selectedno;
    }

    public selectListView getSlov() {
        return slov;
    }

    public void setSlov(selectListView slov) {
        this.slov = slov;
    }

    public String getSqlstr() {
        return sqlstr;
    }

    public void setSqlstr(String sqlstr) {
        this.sqlstr = sqlstr;
    }

    public frmLovSearchPanel() {

        init();
    }

    public void show(String sql, boolean auto_size_col, lovFrame onselection, String... vcols) {
        try {
            sqlstr = sql;
            selectedno = -1;
            if (dbc == null) {
                dbc = new DBClass(utils.getMainFrame().getDbConneciton());
            }
            lovSelection = onselection;
            parentJf = utils.getMainFrame();
            this.auto_size_cols = auto_size_col;
            this.visible_cols = new String[vcols.length];
            for (int i = 0; i < vcols.length; i++) {
                visible_cols[i] = vcols[i];
            }
            createView();
            slov.getTxtFilter().requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(frmLovSearchPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void init() {
        initComponents();
    }

    public void resetLayout() {
        removeAll();
    }
    JPanel jp = new JPanel();

    public void createView() throws SQLException {
        resetLayout();
        slov.getLctb().setDbclass(dbc);
        if (!sqlstr.isEmpty()) {
            if (visible_cols.length > 0) {
                slov.getLctb().executeQuery(sqlstr, visible_cols);
            } else {
                slov.getLctb().executeQuery(sqlstr, true);
            }
        }
        slov.getLctb().setEditAllowed(false);
        slov.setParentPanel(this);
        slov.setParentJf(lovSelection);
        slov.setSelectionStyle(2);
        slov.setAutoSize(auto_size_cols);
        slov.show_footer_ok_cancel = false;
        //slov.footerPanel=new JPanel();
        //slov.footerPanel.add(new JLabel("h"));
        if (footerPanel != null) {
            slov.footerPanel = footerPanel;
        }
        slov.createView();
        slov.resize();
        updateUI();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        slov.resize();
    }//GEN-LAST:event_formComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public void setSelectedNo(int no) {
        this.selectedno = no;

    }

    public DBClass getDbc() {
        return dbc;
    }
}
